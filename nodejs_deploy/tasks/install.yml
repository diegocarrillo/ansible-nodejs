---
- name: install pm2 globally
  become_user: ec2-user
  npm: name=pm2 state=present global=yes
  notify: update pm2

- name: Looking up user home
  become_user: ec2-user
  shell: >
    egrep "^{{ project_user }}:" /etc/passwd | awk -F: '{ print $6 }'
  changed_when: false
  register: pm2_user_home

- name: Installing startup script
  become: yes
  command: "pm2 startup -u {{ project_user }} --hp {{ pm2_user_home.stdout }}"

- name: Ensure service directory exists
  file:
    state: "{{ item }}"
    path: "{{ install_dir }}"
    owner: "{{ project_user }}"
    group: "{{ project_user }}"
  with_items:
    - absent
    - directory

- name: Extract artifact into install_idr
  become_user: ec2-user
  unarchive:
    src: "{{ packageURL }}"
    dest: "{{ install_dir }}"
    owner: "{{ project_user }}"
    group: "{{ project_user }}"
    remote_src: true

- name: start the application
  become_user: ec2-user
  shell: "NODE_ENV={{ env }} PORT={{ service_port }} pm2 start app.js  --name {{ service_name }}_1.0.0 -x  || pm2 gracefulReload {{ service_name }}_1.0.0"
  args:
    chdir: "{{ install_dir }}"
  environment:
    PATH: /appserver/java/jdk1.8.0_11/bin:/appserver/node-v4.2.0-linux-x64/bin:{{ ansible_env.PATH }}
    JAVA_HOME: /appserver/java/jdk1.8.0_11
    PM2_HOME: /appserver/.pm2
    LD_LIBRARY_PATH: /appserver/java/jdk1.8.0_11/jre/lib/amd64:/appserver/java/jdk1.8.0_11/jre/lib/amd64/server



- name: Save the state of the application
  become_user: ec2-user
  become: yes
  shell: pm2 save
  args:
    chdir: "{{ install_dir }}"
  environment:
    PATH: /appserver/java/jdk1.8.0_11/bin:/appserver/node-v4.2.0-linux-x64/bin:{{ ansible_env.PATH }}
    JAVA_HOME: /appserver/java/jdk1.8.0_11
    PM2_HOME: /appserver/.pm2
    LD_LIBRARY_PATH: /appserver/java/jdk1.8.0_11/jre/lib/amd64:/appserver/java/jdk1.8.0_11/jre/lib/amd64/server

- name: copy the packageURL into version.txt
  become_user: ec2-user
  copy:
    content: "{{ packageURL }}"
    dest: "{{ install_dir }}/version.txt"
